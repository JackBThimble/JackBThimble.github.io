{"version":3,"sources":["ColorModeContext.js","NavBar.js","Quote.js","FallbackLoading.js","FallbackError.js","App.js","reportWebVitals.js","index.js"],"names":["ColorModeContext","createContext","ColorModeProvider","props","useState","mode","setMode","colorMode","useMemo","toggleColorMode","prevMode","theme","createTheme","getDesignTokens","Provider","value","ThemeProvider","children","palette","primary","main","seconary","divider","deepOrange","background","default","paper","text","secondary","grey","StyledToolbar","styled","Toolbar","paddingTop","spacing","paddingBottom","position","minHeight","NavBar","useTheme","useContext","Box","sx","flexGrow","AppBar","bgcolor","alignSelf","top","right","IconButton","size","edge","color","onClick","WbSunny","fontSize","DarkMode","Typography","variant","noWrap","component","Quote","data","useAxios","Grid","container","xs","justifyContent","overflowY","item","md","mt","Paper","elevation","p","id","align","FormatQuote","transform","content","author","pt","Button","href","Twitter","refetch","FallbackLoading","Backdrop","zIndex","open","CircularProgress","FallbackError","error","componentStack","display","justifySelf","config","url","response","status","statusText","statusMessage","App","fallback","FallbackComponent","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.74586144.chunk.js","sourcesContent":["/** @format */\n\nimport { ThemeProvider, createTheme } from '@mui/material';\nimport { deepOrange, grey } from '@mui/material/colors';\nimport React, { createContext, useMemo, useState } from 'react';\n\nexport const ColorModeContext = createContext({});\n\nexport const ColorModeProvider = props => {\n  const [mode, setMode] = useState('light');\n  const colorMode = useMemo(\n    () => ({\n      toggleColorMode: () => {\n        setMode(prevMode => (prevMode === 'light' ? 'dark' : 'light'));\n      },\n    }),\n    [],\n  );\n  const theme = useMemo(() => createTheme(getDesignTokens(mode)), [mode]);\n  return (\n    <ColorModeContext.Provider value={colorMode}>\n      <ThemeProvider theme={theme}>{props.children}</ThemeProvider>\n    </ColorModeContext.Provider>\n  );\n};\n\nconst getDesignTokens = mode => ({\n  palette: {\n    mode,\n    ...(mode === 'light'\n      ? {}\n      : {\n          primary: {\n            main: '#5893df',\n          },\n          seconary: {\n            main: '#2ec5d3',\n          },\n          divider: deepOrange[700],\n          background: {\n            default: '#192231',\n            paper: '#24344d',\n          },\n          text: {\n            primary: '#fff',\n            secondary: grey[500],\n          },\n        }),\n  },\n});\n","/** @format */\n\nimport React, { useContext } from 'react';\nimport {\n  styled,\n  AppBar,\n  Box,\n  Toolbar,\n  IconButton,\n  Typography,\n  useTheme,\n} from '@mui/material';\nimport { ColorModeContext } from './ColorModeContext';\nimport { DarkMode, WbSunny } from '@mui/icons-material';\n\nconst StyledToolbar = styled(Toolbar)(({ theme }) => ({\n  paddingTop: theme.spacing(1),\n  paddingBottom: theme.spacing(2),\n  position: 'relative',\n  // Override media queries injected by theme.mixins.toolbar\n  '@media all': {\n    minHeight: 128,\n  },\n}));\n\nexport default function NavBar() {\n  const theme = useTheme();\n  const colorMode = useContext(ColorModeContext);\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <AppBar position=\"static\" sx={{ bgcolor: 'primary.dark' }}>\n        <StyledToolbar>\n          <Box\n            sx={{\n              alignSelf: 'flex-end',\n              position: 'absolute',\n              top: theme.spacing(2),\n              right: theme.spacing(2),\n            }}\n          >\n            <IconButton\n              size=\"large\"\n              edge=\"start\"\n              color=\"inherit\"\n              aria-label=\"select light or dark theme\"\n              onClick={colorMode.toggleColorMode}\n            >\n              {theme.palette.mode === 'dark' ? (\n                <WbSunny sx={{ fontSize: '3rem' }} />\n              ) : (\n                <DarkMode sx={{ fontSize: '3rem' }} />\n              )}\n            </IconButton>\n          </Box>\n          <Typography variant=\"h3\" noWrap component=\"div\" sx={{ flexGrow: 1 }}>\n            Quotes!\n          </Typography>\n        </StyledToolbar>\n      </AppBar>\n    </Box>\n  );\n}\n","/** @format */\n\nimport { Box, Button, Grid, Paper, Typography } from '@mui/material';\nimport { useAxios, refetch } from 'use-axios';\nimport { FormatQuote, Twitter } from '@mui/icons-material';\n\nexport default function Quote() {\n  const { data } = useAxios('https://api.quotable.io/random');\n\n  return (\n    <>\n      <Grid\n        container\n        xs={12}\n        justifyContent=\"center\"\n        sx={{ overflowY: 'scroll' }}\n      >\n        <Grid item xs={11} md={8} sx={{ justifyContent: 'center' }} mt=\"32px\">\n          <Box component={Paper} elevation={8} p={3}>\n            <Box xs={4} id=\"quote-box\">\n              <Typography variant=\"h4\" align=\"center\" id=\"text\">\n                <sup>\n                  <FormatQuote\n                    sx={{ transform: 'rotate(180deg)' }}\n                    fontSize=\"medium\"\n                  />\n                </sup>\n                {data.content}\n                <sup>\n                  <FormatQuote fontSize=\"medium\" align=\"right\" />\n                </sup>\n              </Typography>\n\n              <Typography variant=\"h5\" align=\"right\" id=\"author\">\n                - {data.author}\n              </Typography>\n              <Grid container justifyContent=\"space-around\" pt={2}>\n                <Button\n                  variant=\"outlined\"\n                  href={`https://twitter.com/intent/tweet?hashtags=quotes&related=freecodecamp&text=\"${data.content}\"%20${data.author}`}\n                  id=\"tweet-quote\"\n                >\n                  <Twitter />\n                </Button>\n                <Button\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  onClick={() => refetch('https://api.quotable.io/random')}\n                  id=\"new-quote\"\n                >\n                  New Quote\n                </Button>\n              </Grid>\n            </Box>\n          </Box>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n","/** @format */\n\nimport { Backdrop, CircularProgress } from '@mui/material';\n\nexport default function FallbackLoading() {\n  return (\n    <Backdrop\n      sx={{\n        color: '#fff',\n        zIndex: theme => theme.zIndex + 1,\n      }}\n      open={true}\n    >\n      <CircularProgress color=\"inherit\" />\n    </Backdrop>\n  );\n}\n","/** @format */\n\nimport { Grid, Box, Paper, Typography } from '@mui/material';\n\nexport default function FallbackError({ error, componentStack }) {\n  return (\n    <>\n      <Grid container xs={12} justifyContent=\"center\">\n        <Grid item xs={10} sx={{ justifyContent: 'center' }}>\n          <Box\n            component={Paper}\n            elevation={18}\n            p={3}\n            justifyContent=\"center\"\n            sx={{ display: 'flex' }}\n          >\n            <Box justifySelf=\"center\">\n              <Typography variant=\"h6\">\n                Oops! A request error occured!\n              </Typography>\n              <Typography variant=\"body1\">url: {error.config.url}</Typography>\n              <Typography variant=\"body1\">\n                status: {error.response.status}\n              </Typography>\n              <Typography variant=\"body1\">\n                statusText: {error.response.statusText}\n              </Typography>\n              <Typography variant=\"body1\">\n                statusMessage: {error.response.data.statusMessage}\n              </Typography>\n              <Typography variant=\"body1\">\n                Stacktrace: {componentStack}\n              </Typography>\n            </Box>\n          </Box>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n","/** @format */\nimport { Suspense } from 'react';\nimport NavBar from './NavBar';\nimport Quote from './Quote';\nimport { ColorModeProvider } from './ColorModeContext';\nimport { Grid } from '@mui/material';\nimport FallbackLoading from './FallbackLoading';\nimport { ErrorBoundary } from 'react-error-boundary';\nimport FallbackError from './FallbackError';\nfunction App() {\n  return (\n    <>\n      <ColorModeProvider>\n        <Suspense fallback={<FallbackLoading />}>\n          <Grid\n            container\n            sx={{ minHeight: '100vh', bgcolor: 'background.paper' }}\n          >\n            <NavBar />\n            <ErrorBoundary FallbackComponent={FallbackError}>\n              <Quote />\n            </ErrorBoundary>\n          </Grid>\n        </Suspense>\n      </ColorModeProvider>\n    </>\n  );\n}\n\nexport default App;\n","/** @format */\n\nconst reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/** @format */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport '@fontsource/roboto/300.css';\nimport '@fontsource/roboto/400.css';\nimport '@fontsource/roboto/500.css';\nimport '@fontsource/roboto/700.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}