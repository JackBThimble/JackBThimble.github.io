{"version":3,"sources":["components/Editor.js","components/Preview.js","Markdown.md","App.js","reportWebVitals.js","index.js"],"names":["Editor","text","setText","useState","expand","setExpand","textAreaStyles","width","margin","padding","height","minHeight","resize","border","Grid","container","item","xs","md","justifyContent","component","Paper","mt","elevation","Box","sx","display","alignItems","bgcolor","borderRadius","mb","p","Typography","variant","fontWeight","color","IconButton","onClick","OpenInFull","id","onChange","e","target","value","style","Preview","getMarkdownText","__html","marked","breaks","gfm","markdownText","setMarkdownText","useEffect","overflow","align","dangerouslySetInnerHTML","className","App","fetch","Markdown","then","res","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","theme","createTheme","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.1452f2f8.chunk.js","sourcesContent":["import { Grid, Typography, IconButton, Paper } from '@mui/material'\nimport { Box } from '@mui/system'\nimport { OpenInFull } from '@mui/icons-material'\nimport React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nexport default function Editor({ text, setText }) {\n  const [expand, setExpand] = useState(false)\n  \n  const textAreaStyles = {\n    width: '99%',\n    margin: '0',\n    padding: '15px 0px 0px 15px',\n    height: expand ? '100vh' : '50vh',\n    minHeight: '150px',\n    resize: 'vertical',\n    border: 'none',\n    ':focus': {\n      border: 'none'\n    },\n    ':active': {\n      border: 'none'\n    }\n  }\n\n  const handleExpand = () => {\n    setExpand(!expand)\n  }\n\n  return (\n    <>\n      <Grid container item xs={12} md={8} justifyContent=\"center\" component={Paper} mt={4} elevation={10}>\n        <Box \n          sx={{ \n            display: 'flex',\n            alignItems: 'center',\n            width: '100%',\n            height: '60px',\n            bgcolor: 'primary.dark',\n            borderRadius: 0\n          }}\n          component={Paper}\n          elevation={18}\n          mb={4}\n        >\n          <Grid container xs={12} justifyContent=\"space-between\" p={2}>\n            <Typography variant=\"h5\" p={1} fontWeight=\"400\" color=\"white\">Editor</Typography>\n            <IconButton variant=\"contained\" onClick={handleExpand}><OpenInFull /></IconButton>\n          </Grid>\n        </Box>\n        <textarea\n          id=\"editor\"\n          onChange={(e) => setText(e.target.value)}\n          value={text}\n          style={textAreaStyles}\n        />\n      </Grid>\n    </>\n  )\n}\n\nEditor.propTypes = {\n  text: PropTypes.string.isRequired,\n  setText: PropTypes.func.isRequired,\n}\n","import { Box } from '@mui/system'\nimport React, { useEffect, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport marked from 'marked'\nimport { Grid, Typography, IconButton } from '@mui/material'\nimport { OpenInFull } from '@mui/icons-material'\nimport './css/Preview.css'\n\nexport default function Preview({ text }) {\n  \n  const getMarkdownText = () => {\n    var rawMarkup = marked(\n      text, { \n        breaks: true, \n        gfm: true, \n      })\n    return { __html: rawMarkup }\n  }\n\n  const [markdownText, setMarkdownText] = useState(getMarkdownText())\n  useEffect(() => {\n    setMarkdownText(getMarkdownText())\n  }, [text])\n  \n\n  return (\n    <>\n      <Grid xs={12} md={8} container item justifyContent=\"center\">\n        <Box \n          sx={{\n            display: 'flex',\n            alignItems: 'center',\n            width: '100%',\n            height: '60px',\n            bgcolor: 'primary.dark',\n            mt: 4}}\n        >\n          <Grid container item xs={12} justifyContent=\"space-between\" p={2}>\n            <Typography variant=\"h5\" p={1} fontWeight=\"400\" color=\"white\">Preview</Typography>\n            <IconButton><OpenInFull /></IconButton>\n          </Grid>\n        </Box>\n        <Box\n          sx={{\n            height: '100vh', \n            overflow: 'scroll',\n            width: '100%',\n            align: 'center',\n            bgcolor: 'white',\n            p: '15px',\n            mb: 4\n          }}\n          component=\"div\"\n        >\n          <div\n            dangerouslySetInnerHTML={markdownText}\n            className=\"Preview\"\n            id=\"preview\"\n          >\n            \n          </div>\n        </Box>\n      </Grid>\n    </>\n  )\n}\n\nPreview.propTypes = {\n  text: PropTypes.string.isRequired\n}","export default __webpack_public_path__ + \"static/media/Markdown.b0b84107.md\";","import React, { useState, useEffect } from 'react'\nimport Editor from './components/Editor'\nimport Preview from './components/Preview'\nimport Markdown from './Markdown.md'\nimport { Grid, } from '@mui/material'\nfunction App() {\n  const [text, setText] = useState('')\n\n  useEffect(() => {\n    fetch(Markdown)\n      .then((res) => res.text())\n      .then((md) => {\n        setText(md)\n      })\n  }, [])\n\n  return (\n    <>\n      <Grid container xs={12} justifyContent=\"center\"\n        sx={{bgcolor: 'primary.light'}}>\n        <Grid container item xs={12} justifyContent=\"center\">\n          <Editor text={text} setText={setText} />\n        </Grid>\n        <Grid container item xs={12} justifyContent=\"center\">\n          <Preview text={text}/>\n        </Grid>\n      </Grid>\n    </>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport { ThemeProvider, createTheme } from '@mui/material'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport '@fontsource/roboto/300.css'\nimport '@fontsource/roboto/400.css'\nimport '@fontsource/roboto/500.css'\nimport '@fontsource/roboto/700.css'\n\nconst theme = createTheme()\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}